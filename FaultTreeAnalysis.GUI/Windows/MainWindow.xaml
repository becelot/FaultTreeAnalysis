<mahApps:MetroWindow x:Class="FaultTreeAnalysis.GUI.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:controls="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions" 
        xmlns:local="clr-namespace:FaultTreeAnalysis.GUI.Windows" 
        xmlns:ftaFaultTree="clr-namespace:FaultTreeAnalysis.FaultTree.Tree;assembly=FaultTreeAnalysis"
        xmlns:ftaBDD="clr-namespace:FaultTreeAnalysis.BDD.BDDTree;assembly=FaultTreeAnalysis"
        xmlns:converter="clr-namespace:FaultTreeAnalysis.GUI.Converters" 
        xmlns:wpf="clr-namespace:Graphviz4Net.WPF;assembly=Graphviz4Net.WPF" 
        xmlns:viewModel="clr-namespace:FaultTreeAnalysis.GUI.ViewModel"
        xmlns:edgeViewModels="clr-namespace:Graphviz4Net.WPF.ViewModels;assembly=Graphviz4Net.WPF" 
        xmlns:flyoutControls="clr-namespace:FaultTreeAnalysis.GUI.FlyoutControls"
        Title="Fault Tree Analysis Tool" 
        Icon="{StaticResource AppIcon}"
        Height="{Binding WindowHeight, Mode=OneWayToSource}" 
        Width="{Binding WindowWidth, Mode=OneWayToSource}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converter:GraphFaultTreeConverter x:Key="GraphFtConverter" />
            <converter:VisibilityConverter x:Key="VisibilityConverter" />
            <converter:BDDGraphConverter x:Key="BDDGraphConverter" />

            <DataTemplate DataType="{x:Type viewModel:DiamondArrow}">
                <Canvas Width="6" Height="11">
                    <Polygon Points="3,0 6,5 3,10 0,5" Stroke="Black" StrokeThickness="1" Fill="Black"/>
                </Canvas>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:Arrow}">
                <Path Data="M 0,0 L 20,0 L 10,10 L 0,0" Stroke="Black" StrokeThickness="1" />
            </DataTemplate>

            <!-- Set UseContentPresenterForAllElements of GraphLayout to true -->
            <DataTemplate DataType="{x:Type edgeViewModels:EdgeLabelViewModel}">
                <StackPanel PreviewMouseDown="ChangeRateClick" DataContext="{Binding}" ToolTip="Double click to edit.">
                    <TextBlock Text="{Binding Path=Label}"  FontFamily="Comic Sans MS" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type edgeViewModels:BorderViewModel}">
                <Border BorderBrush="Green"
                    BorderThickness="2"
                    CornerRadius="10"
                    Padding="10, 0, 0, 0">
                    <TextBlock Text="{Binding Path=Label}" FontStyle="Italic"/>
                </Border>
            </DataTemplate>

            <DataTemplate DataType="{x:Type edgeViewModels:EdgeArrowLabelViewModel}">
                <TextBlock Text="{Binding Path=Label}" Background="White"/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type edgeViewModels:EdgeViewModel}">
                <Path Data="{Binding Data}" Stroke="Black" StrokeDashArray="{Binding Edge.DashArray}" ToolTip="{Binding Edge.Label}">
                    <Path.Style>
                        <Style TargetType="Path">
                            <Style.Triggers>
                                <Trigger Property="Path.IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="0" To="2" Duration="00:00:00.2" 
                                                        Storyboard.TargetProperty="Effect.Radius"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="2" To="0" Duration="00:00:00.2" 
                                                        Storyboard.TargetProperty="Effect.Radius"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter Property="StrokeThickness" Value="5"></Setter>
                                </Trigger>
                                
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                    <Path.Effect>
                        <BlurEffect Radius="0" KernelType="Gaussian"></BlurEffect>
                    </Path.Effect>
                </Path>
            </DataTemplate>

            <DataTemplate DataType="{x:Type ftaFaultTree:FaultTreeAndGateNode}">
                <Grid ToolTip="AND Gate" DataContext="{Binding}" Background="Transparent" Width="100" Height="50" MouseLeftButtonDown="FaultTreeZoomControl_MouseLeftButtonDown" MouseMove="FaultTreeZoomControl_MouseMove">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <Trigger Property="Border.IsMouseOver" Value="True">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="10" BlurRadius="10" Color="DarkGray"  Opacity="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Border BorderBrush="Black" BorderThickness="2">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="0" To="2" Duration="00:00:00.2" 
                                                        Storyboard.TargetProperty="Effect.Radius"></DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="2" To="0" Duration="00:00:00.2" 
                                                        Storyboard.TargetProperty="Effect.Radius"></DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                        <Setter Property="BorderThickness" Value="3"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border.Effect>
                            <BlurEffect Radius="0" KernelType="Gaussian" />
                        </Border.Effect>
                        <Grid Width="100" Height="50" Background="LightSkyBlue">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="&amp;" FontWeight="Bold" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                                <Setter Property="FontSize" Value="27"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                                <Setter Property="FontSize" Value="24"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type ftaFaultTree:FaultTreeOrGateNode}">
                <Grid ToolTip="OR Gate" DataContext="{Binding}" Background="Transparent" Width="100" Height="50" MouseLeftButtonDown="FaultTreeZoomControl_MouseLeftButtonDown" MouseMove="FaultTreeZoomControl_MouseMove">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <Trigger Property="Border.IsMouseOver" Value="True">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="10" BlurRadius="10" Color="DarkGray"  Opacity="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Border BorderBrush="Black" BorderThickness="2">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="0" To="2" Duration="00:00:00.2" 
                                                        Storyboard.TargetProperty="Effect.Radius"></DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="2" To="0" Duration="00:00:00.2" 
                                                        Storyboard.TargetProperty="Effect.Radius"></DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                        <Setter Property="BorderThickness" Value="3"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border.Effect>
                            <BlurEffect Radius="0" KernelType="Gaussian" />
                        </Border.Effect>
                        <Grid Width="100" Height="50" Background="LightSkyBlue">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text=">=0" FontWeight="Bold" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                                <Setter Property="FontSize" Value="27"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                                <Setter Property="FontSize" Value="24"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type ftaFaultTree:FaultTreeTerminalNode}">
                <Grid ToolTip="Basic Event" DataContext="{Binding}" Background="Transparent" Width="40" Height="40" MouseLeftButtonDown="FaultTreeZoomControl_MouseLeftButtonDown" MouseMove="FaultTreeZoomControl_MouseMove">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <Trigger Property="Border.IsMouseOver" Value="True">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect ShadowDepth="10" BlurRadius="10" Color="DarkGray"  Opacity="0.5"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Border CornerRadius="90" Width="40" Height="40" Padding="4" Background="LightGray" BorderBrush="Black" BorderThickness="1">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="Border.IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="0" To="2" Duration="00:00:00.2" 
                                                        Storyboard.TargetProperty="Effect.Radius"></DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation From="2" To="0" Duration="00:00:00.2" 
                                                        Storyboard.TargetProperty="Effect.Radius"></DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                        <Setter Property="BorderThickness" Value="3"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border.Effect>
                            <BlurEffect Radius="0" KernelType="Gaussian" />
                        </Border.Effect>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Label}" >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                            <Setter Property="FontWeight" Value="Bold"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                            <Setter Property="FontWeight" Value="Normal"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Border>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type ftaBDD:BDDVariableNode}">
                <Border CornerRadius="90" Width="40" Height="40" Padding="4" Background="LightBlue" BorderBrush="Black" BorderThickness="1">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Variable}" />
                </Border>
            </DataTemplate>

            <DataTemplate DataType="{x:Type ftaBDD:BDDTerminalNode}" >
                <Border Width="60" Padding="4" Background="LightGray" BorderBrush="Black" BorderThickness="1">
                    <TextBlock HorizontalAlignment="Center" Text="{Binding Value}" />
                </Border>
            </DataTemplate>
        </ResourceDictionary>

    </Window.Resources>
    <mahApps:MetroWindow.RightWindowCommands>
        <mahApps:WindowCommands>
            <Button Click="Button_Click">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="16" Height="16">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource Appbar_settings}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Margin="4" VerticalAlignment="Center" Text="options" />
                </StackPanel>
            </Button>
        </mahApps:WindowCommands>
    </mahApps:MetroWindow.RightWindowCommands>
    <mahApps:MetroWindow.Flyouts>
        <mahApps:FlyoutsControl Margin="{Binding TitleBarMargin, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
            <mahApps:Flyout x:Name="FlyoutOptions" Position="Left" Panel.ZIndex="102" Header="Options" Width="515">
                <flyoutControls:OptionsMain x:Name="Options" />
            </mahApps:Flyout>
        </mahApps:FlyoutsControl>
    </mahApps:MetroWindow.Flyouts>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Grid.Column="0">
            <MenuItem Header="_PROJECT">
                <MenuItem.Icon>
                    <Rectangle Width="16" Height="16"  Margin="0,0,-10,0">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource Appbar_layer_add}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </MenuItem.Icon>
                <MenuItem Header="FROM _FILE" Click="LoadFromFileClick" />
                <MenuItem Header="_EXAMPLES">
                    <MenuItem Header="Example _1" Click="Example1Open" />
                    <MenuItem Header="Example _2" Click="Example2Open" />
                    <MenuItem Header="Example _3" Click="Example3Open" />
                    <MenuItem Header="Example _4" Click="Example4Open" />
                    <MenuItem Header="Example _5" Click="Example5Open" />
                    <MenuItem Header="Example _6" Click="Example6Open" />
                    <MenuItem Header="Example _7" Click="Example7Open" />
                    <MenuItem Header="Example _8" Click="Example8Open" />
                    <MenuItem Header="Example _9" Click="Example9Open" />
                    <MenuItem Header="Example _10" Click="Example10Open" />
                </MenuItem>
                <Separator></Separator>
                <MenuItem Header="_SAVE PROJECT" Click="SaveProjectClick"></MenuItem>
            </MenuItem>
            <MenuItem Header="_VIEW">
                <MenuItem.Icon>
                    <Rectangle Width="24" Height="16"  Margin="0,0,-10,0">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource Appbar_view}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </MenuItem.Icon>
                <RadioButton Content="Fault Tree View" IsChecked="True" Checked="ViewChanged" Name="FaultTreeView" />
                <RadioButton Content="BinaryDecisionDiagram View" IsChecked="False" Checked="ViewChanged" Name="BDDTreeView"/>
            </MenuItem>
            <MenuItem Header="_ADD">
                <MenuItem.Icon>
                    <Rectangle Width="24" Height="16"  Margin="0,0,-10,0">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource App_addicon}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </MenuItem.Icon>
                <MenuItem Header="Add AND-Gate" Click="AddAndGate" />
                <MenuItem Header="Add OR-Gate" Click="AddOrGate" />
                <MenuItem Header="Add Basic Event" Click="AddBasicEvent" />
                <Separator></Separator>
                <MenuItem Header="Insert AND-Gate"></MenuItem>
                <MenuItem Header="Insert OR-Gate"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Add Edge">
                    <MenuItem Header="Markov Chain" Click="AddMarkovChain" />
                    <MenuItem Header="Gate Connection" Click="AddGateConnection" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_REMOVE" Click="RemoveComponent">
                <MenuItem.Icon>
                    <Rectangle Width="16" Height="16"  Margin="0,0,-10,0">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource App_removeComponent}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="_ANALYZE">
                <MenuItem.Icon>
                    <Rectangle Width="24" Height="16"  Margin="0,0,-10,0">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource App_analyze}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </MenuItem.Icon>
            </MenuItem>
        </Menu>
        <Grid Name="FaultTreeGridView" Grid.Column="0" Grid.Row="1" Cursor="Cross" Background="Transparent" >
            <controls:ZoomControl Name="FaultTreeZoomControl" Visibility="{Binding FaultTreeView, Converter={StaticResource VisibilityConverter}}" ZoomDeltaMultiplier="40">
                <wpf:GraphLayout 
                UseContentPresenterForAllElements="True"
                LogGraphvizOutput="False"
                x:Name="GraphLayout">
                    <wpf:GraphLayout.Resources>
                        <Style TargetType="ProgressBar">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ProgressBar">
                                        <TextBlock Foreground="Black">Generating the layout...</TextBlock>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="wpf:GraphLayout">
                            <Setter Property="Graph">
                                <Setter.Value>
                                    <Binding Path="FaultTree" Converter="{StaticResource GraphFtConverter}" Mode="OneWay" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </wpf:GraphLayout.Resources>
                </wpf:GraphLayout>
            </controls:ZoomControl>
        </Grid>


        <controls:ZoomControl Grid.Column="0" Grid.Row="1" Visibility="{Binding BDDTreeView, Converter={StaticResource VisibilityConverter}}" ZoomDeltaMultiplier="40">
            <wpf:GraphLayout 
                UseContentPresenterForAllElements="True"
                LogGraphvizOutput="False"
                x:Name="BDDLayout">
                <wpf:GraphLayout.Resources>
                    <Style TargetType="ProgressBar">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ProgressBar">
                                    <TextBlock Foreground="Black">Generating the layout...</TextBlock>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="wpf:GraphLayout">
                        <Setter Property="Graph">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource BDDGraphConverter}">
                                    <Binding Path="FaultTree" />
                                    <Binding Path="BDDTreeView" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </wpf:GraphLayout.Resources>
            </wpf:GraphLayout>
        </controls:ZoomControl>
    </Grid>
</mahApps:MetroWindow>